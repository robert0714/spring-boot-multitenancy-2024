<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.iisigroup</groupId>
	<artifactId>login-api-multi-tenant</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>login-api</name>
	<description>Aggregate API for login multi-tenant</description>
	<properties>
        <spring-boot.version>3.4.2</spring-boot.version>
		<java.version>17</java.version>
		<springdoc.version>2.6.0</springdoc.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<file.encoding>UTF-8</file.encoding>
        <jib-maven-plugin.version>3.4.3</jib-maven-plugin.version>
        <native.maven.plugin.version>0.10.2</native.maven.plugin.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-math3</artifactId>
		    <version>3.6.1</version>
		</dependency> 
		<!-- springdoc ui -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
		<dependency>
		    <groupId>com.h2database</groupId>
		    <artifactId>h2</artifactId>
		    <version>2.2.224</version>
		</dependency>        
		<dependency>
		    <groupId>com.jayway.jsonpath</groupId>
		    <artifactId>json-path</artifactId> 
		</dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>  
        <dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId> 
            <scope>runtime</scope>
		</dependency>
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId> 
		</dependency>
	</dependencies>

	<build>
        <finalName>${artifactId}</finalName>
        <plugins>
            <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-compiler-plugin</artifactId>
	            <version>3.12.1</version>
	            <configuration>
	                <compilerArgs>
					   <arg>--add-opens</arg>
	                   <arg>java.base/java.lang=ALL-UNNAMED</arg> 
					   <arg>--add-opens</arg>
	                   <arg>java.xml/jdk.xml.internal=ALL-UNNAMED</arg>
                    </compilerArgs> 
	                <fork>true</fork>
	            </configuration>
	        </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<classesDirectory>${project.build.outputDirectory}</classesDirectory>
					<argLine>--add-opens java.base/java.lang=ALL-UNNAMED</argLine> 
					<argLine>--add-opens java.xml/jdk.xml.internal=ALL-UNNAMED</argLine>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
				    <testFailureIgnore>true</testFailureIgnore>
                    <argLine>--add-opens java.base/java.lang=ALL-UNNAMED</argLine> 
					<argLine>--add-opens java.xml/jdk.xml.internal=ALL-UNNAMED</argLine>
					<argLine>-javaagent:${project.build.directory}/agent/jacocoagent.jar=destfile=${project.build.directory}/jacoco.exec</argLine>
                </configuration>
			</plugin> 
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
                <executions>
	                <execution>
	                    <goals>
	                        <goal>repackage</goal>
	                    </goals>						
	                </execution>										
	            </executions>
				<configuration>
				    <layers>
						<enabled>true</enabled>
					</layers>
				   	<image>
						<name>${project.artifactId}:latest</name>
							<env>
							   <BP_JVM_VERSION>17.*</BP_JVM_VERSION>
							</env>
							<createdDate>${maven.build.timestamp}</createdDate>
					</image>
				</configuration>
            </plugin> 
            <plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<transitive>false</transitive>
				</configuration>
				<executions>
					<execution>
                        <phase>compile</phase> 
                        <goals>
	                        <goal>unpack</goal>
	                    </goals>
                        <configuration>
	                        <artifactItems>
	                           <artifactItem>
                                    <groupId>org.jacoco</groupId>
                                    <artifactId>org.jacoco.agent</artifactId>
                                    <version>0.8.12</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/agent</outputDirectory> 
                                </artifactItem>
	                        </artifactItems>
	                     </configuration>
					</execution>
				</executions>
			</plugin>
            <!-- Coverage Report -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <configuration>
                    <excludes>
                        <exclude>**/vo/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-check</id>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>PACKAGE</element>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>    
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.graalvm.buildtools</groupId>
                    <artifactId>native-maven-plugin</artifactId>
                    <version>${native.maven.plugin.version}</version>
                    <configuration>
                        <!-- Mockito is not supported -->
                        <skipNativeTests>true</skipNativeTests>
                    </configuration>
                </plugin>
                <!-- We can compile the application in AOT mode but not producing a native image -->
                <!-- If we active this plugin  -->
                <!-- and deactive all the pom native component -->
                <!--     <plugin>
                         <groupId>org.springframework.boot</groupId>
                         <artifactId>spring-boot-maven-plugin</artifactId>
                         <configuration>
                             <jvmArguments> -agentlib:native-image-agent=config-output-dir=target/native-image
                             </jvmArguments>
                         </configuration>
						 <executions>
							 <execution>
								 <id>process-aot</id>
								 <goals>
									 <goal>process-aot</goal>
								 </goals>
							 </execution>
						 </executions>
                     </plugin>  -->
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <!-- The native profile is already defined by the parent POM. -->
        <!-- To use this plugin, we need GraalVM (located under $GRAALVM_HOME) and -->
        <!-- native-builder (located in the $PATH) -->
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <version>${native.maven.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>build-native</id>
                                <goals>
                                    <goal>compile-no-fork</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>

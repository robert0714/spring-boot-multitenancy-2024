<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.thomasvitale</groupId>
	<artifactId>edge-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>edge-service</name>
	<description>Demo project for Edge Service</description>
	<properties>
		<spring-boot.version>3.2.8</spring-boot.version>
		<spring-cloud.version>2023.0.3</spring-cloud.version>
		<java.version>17</java.version>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<file.encoding>UTF-8</file.encoding> 
		<jib-maven-plugin.version>3.4.3</jib-maven-plugin.version>
        <native.maven.plugin.version>0.10.2</native.maven.plugin.version>
		<mainClass>com.thomasvitale.edgeservice.EdgeServiceApplication</mainClass>
        <jna.version>5.13.0</jna.version> <!-- Check https://www.graalvm.org/latest/reference-manual/native-image/metadata/ -->
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId> 
		</dependency>
        <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-gateway</artifactId> 
		</dependency> 
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		 <dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-otlp</artifactId> 
		</dependency> 
        <dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-otel</artifactId> 
		</dependency>
		<dependency>
            <groupId>io.opentelemetry.javaagent</groupId>
            <artifactId>opentelemetry-javaagent</artifactId>
            <version>1.33.4</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId> 
            <scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency> 
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>test</scope>
		</dependency> 
		<dependency>
		    <groupId>io.projectreactor</groupId>
		    <artifactId>reactor-test</artifactId>
		    <scope>test</scope>
		</dependency> 
	</dependencies>
	<build>
		<finalName>${project.artifactId}</finalName> 
		<plugins>
			<plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
	                <execution>
	                    <goals>
	                        <goal>repackage</goal>
	                    </goals>						
	                </execution>
					<execution>
                        <id>process-aot</id>
                        <goals>
                            <goal>process-aot</goal>
                        </goals>
                    </execution>
	            </executions>
				<configuration>
				    <layers>
						<enabled>true</enabled>
					</layers>
				   	<image>
						<name>${project.artifactId}:latest</name>
							<env>
							   <BP_JVM_VERSION>17.*</BP_JVM_VERSION>
							</env>
							<createdDate>${maven.build.timestamp}</createdDate>
					</image>
				</configuration>
            </plugin> 			
			<plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-compiler-plugin</artifactId>
	            <version>3.12.1</version>
	            <configuration>
	                <compilerArgs> 
	                    <arg>-parameters</arg>
	                </compilerArgs>
	                <fork>true</fork>
	            </configuration>
	        </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<classesDirectory>${project.build.outputDirectory}</classesDirectory> 
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<transitive>false</transitive>
				</configuration>
				<executions>
					<execution>
                        <phase>compile</phase> 
                        <goals>
	                        <goal>unpack</goal>
	                    </goals>
                        <configuration>
	                        <artifactItems>
	                           <artifactItem>
                                    <groupId>org.jacoco</groupId>
                                    <artifactId>org.jacoco.agent</artifactId>
                                    <version>0.8.11</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/agent</outputDirectory> 
                                </artifactItem>
	                        </artifactItems>
	                     </configuration>
					</execution>
				</executions>
			</plugin>
			 <plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
				    <!-- <testFailureIgnore>true</testFailureIgnore> -->
					<argLine>-javaagent:${project.build.directory}/agent/jacocoagent.jar=destfile=${project.build.directory}/jacoco.exec</argLine>
                </configuration>
			</plugin> 
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId> 
				<version>3.3.0</version> 
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.6.2</version>
				<configuration>
					<doclint>none</doclint>
					<charset>UTF-8</charset>
					<show>private</show>
					<nohelp>true</nohelp>
					<excludePackageNames>*.vo</excludePackageNames>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Coverage Report -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.11</version>
				<configuration>  
					<excludes>
						<exclude>**/vo/**</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-check</id>
						<phase>test</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>PACKAGE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>java-agent</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>${mainClass}</argument>
                                <argument>--graalvm-agent-run</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>native</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.build.directory}/${imageName}
                            </executable>
                            <workingDirectory>${project.build.directory}
                            </workingDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${mainClass}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${mainClass}</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.10.0.2594</version>
			</plugin>

		</plugins> 
	</build>
	 <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
			<dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
	<profiles>
		<profile>
			<id>native</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>${native.maven.plugin.version}</version>						 
						<extensions>true</extensions>
						<executions>
							<execution>
								<id>build-native</id>
								 <goals>
                                    <goal>build</goal>
                                </goals>
								<phase>package</phase>
							</execution>
							<execution>
								<id>test-native</id>
								<goals>
									<goal>test</goal>
								</goals>
								<phase>test</phase>
							</execution>
							<execution>
									<id>add-reachability-metadata</id>
									<goals>
										<goal>add-reachability-metadata</goal>
									</goals>
							</execution>
						</executions>
						<configuration>
						    <!-- Mockito is not supported -->
							<skipNativeTests>true</skipNativeTests>
							<verbose>true</verbose> 
							<mainClass>${mainClass}</mainClass>
							<classesDirectory>${project.build.outputDirectory}</classesDirectory>
							<metadataRepository>
								<enabled>true</enabled>
							</metadataRepository>
							<requiredVersion>22.3</requiredVersion>
                            <fallback>false</fallback>
                            <!-- https://graalvm.github.io/native-build-tools/latest/maven-plugin.html#agent-support-configuring-options -->
                            <!-- https://medium.com/graalvm/simplifying-native-image-generation-with-maven-plugin-and-embeddable-configuration-d5b283b92f57 -->
                            <!-- ./mvnw -Pnative -Dagent package will read the json files from the jar's META-INF/native-image. -->
                            <agent>
                                <enabled>true</enabled>
                                <defaultMode>direct</defaultMode>
                                <modes>
                                    <direct>config-output-dir=src/main/resources/META-INF/native-image</direct>
                                </modes>
                            </agent>
                        </configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
